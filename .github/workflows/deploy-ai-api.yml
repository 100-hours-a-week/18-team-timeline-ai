name: Deploy to GCP VM

on:
  workflow_call:
    secrets:
      GCP_SSH_USER:
        required: true
      GCP_VM_HOST:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GCP_SSH_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write

    env:
      AWS_REGION: ap-northeast-2
      AWS_ACCOUNT_ID: 346011888304

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::346011888304:role/github-action-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Download .env from S3
        run: aws s3 cp s3://tamnarra-environment/ai/.env .env

      - name: Setup SSH key (with verification)
        run: |
          echo "${{ secrets.GCP_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload deploy.sh + .env to GCP VM
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no ./docker/deploy.sh ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_HOST }}:/tmp/deploy.sh
          scp -i key.pem -o StrictHostKeyChecking=no ./.env ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_HOST }}:/tmp/.env

      - name: Execute deploy.sh on GCP VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_HOST }} "
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

            cd /tmp
            echo '[INFO] Running deploy.sh...'
            bash deploy.sh 2>&1   # 표준에러 포함 모든 출력
            echo '[INFO] Finished deploy.sh.' 

            rm .env
            rm deploy.sh
          "